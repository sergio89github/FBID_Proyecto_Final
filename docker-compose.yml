version: "3"
services:
  
  zookeeper:
    image: strimzi/kafka:0.20.0-kafka-2.6.0
    command: [
        "sh", "-c",
        "bin/zookeeper-server-start.sh config/zookeeper.properties"
      ]
    ports:
    - "2181:2181"
    environment:
      LOG_DIR: /tmp/logs
    networks:
      - fdp  

  kafka:
    image: strimzi/kafka:0.20.0-kafka-2.6.0
    command: [
      "sh", "-c",
      "bin/kafka-server-start.sh config/server.properties --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT}",
      "&&", "bin/kafka-topics.sh --create --zookeeper zookeeper:2181 --replication-factor 1 --partitions 1 --topic flight_delay_classification_request"
    ]
    depends_on:
    - zookeeper
    ports:
    - "9092:9092"
    environment:
      LOG_DIR: "/tmp/logs"
      KAFKA_CREATE_TOPICS: "flight_delay_classification_request:1:1"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    networks:
      - fdp

  mongo:
    image: image_mongo
    networks:
      - fdp
    ports:
      - "27017:27017"
  
  
    # mongo_fill:
    # image: mongo_fill
    # networks:
    # - fdp

  spark-master:
    image: bde2020/spark-master:2.4.4-hadoop2.7
    # container_name: spark-master2
    ports:
      - "8080:8080"
      - "7077:7077"
      - "9001:9001"
    depends_on:
      - kafka
    environment:
      - INIT_DAEMON_STEP=setup_spark
      - "constraint:node==spark-master"
    networks:
         - fdp
    volumes:
      - ./models:/models

  spark-worker-1:
    image: image_worker 
    # container_name: spark-worker2
    depends_on:
      - spark-master
    ports:
      - "8081:8081"
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"
      - "constraint:node==spark-master"
    volumes:
      - ./models:/models
    
    networks:
        - fdp
    
  web:
    image: image_web
    #container_name: flask
    depends_on:
      - mongo
    ports:
      - "5000:5000"
    networks:
        - fdp
  

networks:
  fdp:
